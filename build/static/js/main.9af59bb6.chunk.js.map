{"version":3,"sources":["api/index.js","components/AddPost.js","components/CreateProfile.js","components/Header.js","components/Login.js","components/SendMessage.js","components/Delete.js","components/Edit.js","components/Posts.js","components/Profile.js","index.js"],"names":["BASE_URL","AddPost","token","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","history","useHistory","handleSubmit","event","a","console","log","preventDefault","fetch","method","headers","body","JSON","stringify","post","response","json","push","error","className","onSubmit","type","name","value","placeholder","onChange","target","CreateProfile","useState","username","setUsername","password","setPassword","ConfirmPassword","setConfirmPassword","profileCreated","setProfileCreated","createAProfile","user","data","alert","to","htmlFor","id","Header","loginSuccess","setLoginSuccess","onClick","localStorage","removeItem","Login","then","result","setItem","catch","SendMessage","props","inputMess","setInputMess","postID","SendMessages","message","content","Delete","postid","Edit","getItem","posts","map","Posts","setPosts","messages","setMessages","filter","setFilter","filterPost","text","toLowerCase","includes","filteredPosts","postToDisplay","length","author","_id","Profile","messagesFromUser","setMessagesFromUser","messagesToUser","setMessagesToUser","useEffect","fromUser","App","setToken","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9af59bb6.chunk.js","sourcesContent":["export const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt';\n\n\n// export async function fetchData() {\n//     try {\n//         const response = await fetch(BASE_URL);\n//         const data = await response.json();\n//         console.log(data);\n//     } catch (err) {\n//         console.error(err);\n//     }\n// }\n// fetchData();\n\n// export async function fetchSearchResults({\n//     title, \n//     location, \n//     title, \n//     price,\n// }) {\n//     const url = `${BASE_URL}/posts`\n//     try {\n//         const response = await fetch(url);\n//         const data = await response.json();\n\n//         return data;\n//     }catch (error){\n//         throw error;\n//     }\n// }","import { BASE_URL } from '../api';\nimport { useHistory } from 'react-router-dom';\n\nconst AddPost = ({token, title, setTitle, description, setDescription, price, setPrice, location, setLocation, willDeliver, setWillDeliver}) => {\n\n        const history = useHistory() \n\n        const handleSubmit = async (event) => {\n            console.log(\"1\")\n            event.preventDefault();\n\n            try {\n            const response = await fetch(`${BASE_URL}/posts`, {\n                method: 'POST',\n                headers:{\n                    'Content-Type': 'Application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({\n                    post: {\n                        title: title,\n                        description: description,\n                        price: price,\n                        location: location,\n                        willDeliver: willDeliver\n                    }\n                })\n            })\n            setTitle('');\n            setDescription('');\n            setPrice('');\n            setLocation('');\n            setWillDeliver(false);\n            const post = await response.json();\n            history.push(\"/posts\")\n\n            } catch (err) {\n                console.error(err);\n            }\n        };\n\n        \n       \n\n    return (\n        <section className=\"addNewPost\"> \n            <h1>Add New Post</h1>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\" name=\"title\" value={title} placeholder=\"Title\" onChange={(event)=>setTitle(event.target.value)}/>\n                    <br/>\n                    <input type=\"text\" name=\"description\" value={description} placeholder=\"Description\" onChange={(event)=>setDescription(event.target.value)}/>\n                    <br/>\n                    <input type=\"text\" name=\"price\" value={price} placeholder=\"Price\" onChange={(event)=>setPrice(event.target.value)}/>\n                    <br/>\n                    <input type=\"text\" name=\"location\" value={location} placeholder=\"Location\" onChange={(event)=>setLocation(event.target.value)}/>\n                    <br/>\n                    <label>\n                        <input type=\"checkbox\" name=\"willDeliver\" value={willDeliver} onChange={(event)=>setWillDeliver(event.target.value)}/>\n                        Willing to Deliver?\n                    </label>\n                    <br/>\n                    <button type=\"submit\">Create Post</button>                \n                </form>\n        </section>\n    ) \n}\n\nexport default AddPost;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst CreateProfile = () => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [ConfirmPassword, setConfirmPassword] = useState('')\n    const [profileCreated, setProfileCreated] = useState(false)\n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    \n    const createAProfile = async ()=> { \n        const response = await fetch(`${BASE_URL}/users/register`, {\n            method: 'POST',\n            headers:{\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: {\n                \"username\": username,\n                \"password\": password,\n                \n                }   \n            }) \n        }) \n        console.log(`${BASE_URL}/users/register`)\n        const data = await response.json();\n        console.log(data)\n        setUsername('')\n        setPassword('')\n        setProfileCreated(true)\n     }\n\n    \n    const checkPassword = () => {\n        if (password === ConfirmPassword) {\n            createAProfile()\n        } else {\n            alert(\"Password do not match, please try again\")\n        }\n    }\n    if(profileCreated){\n        return (\n            alert(\"Profile created! Please log in!\"),\n            <Redirect to=\"/login\"/>\n        )\n\n    }\n\n    return (\n        <form onSubmit={(event)=> {\n            event.preventDefault()\n            checkPassword()\n            }}> \n            \n            \n\n            <fieldset>\n                <label htmlFor=\"Username\">Create Username</label>\n                <input\n                    className=\"CreateUsername\"\n                    id=\"username\"\n                    type=\"text\"\n                    value={username}\n                    onChange={(event) => setUsername(event.target.value)}\n                />\n\n                <label htmlFor=\"Password\">Create Password</label>\n                <input\n                    className=\"CreatePassword\"\n                    id=\"password\"\n                    type=\"text\"\n                    value={password}\n                    onChange={(event) => setPassword(event.target.value)}\n                />\n\n                <label htmlFor=\"Confirm Password\">Confirm Password</label>\n                <input\n                    className=\"CreatePassword\"\n                    id=\"confirmPassword\"\n                    type=\"text\"\n                    value={ConfirmPassword}\n                    onChange={(event) => setConfirmPassword(event.target.value)}\n                />\n                <br></br>\n                <button \n                    type=\"submit\" \n                    name=\"event\" \n                    > Create Profile \n                </button>\n\n            </fieldset>\n                {console.log(\"A\")}\n     </form>\n    )  \n}\n\nexport default CreateProfile;\n","import { Link } from 'react-router-dom';\n    \nconst Header = ({loginSuccess, setLoginSuccess}) => {\n   \n    const logOut = () => {\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(\"username\")\n        setLoginSuccess(false)\n    }\n\n    return (\n        <div className=\"header\">\n            <section className=\"title\"> \n                <h1> Stranger's Things </h1>\n            </section>\n            \n            <section className=\"links\"> \n                <nav>\n                    <ul>\n                        <li> <Link to=\"/posts\">Posts</Link> </li>\n                        <li> { !loginSuccess ? <Link to=\"/login\">Login</Link> : <Link to=\"/login\" onClick={logOut} >Logout</Link>} </li>\n                        {/* <li> <Link to=\"/logout\">Logout1</Link> </li> */}\n                        <li> { loginSuccess && <Link to=\"/profile\">Profile</Link>}</li>\n                        \n                    </ul>\n                </nav>\n            </section>\n        </div>\n       \n    )\n}\n\nexport default Header;\n\n","import { Link, Redirect } from 'react-router-dom';\n\nconst Login = ({loginSuccess, setLoginSuccess}) => {\n  \n   \n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n\n    \n    const authenticate = (event) => {\n       \n        event.preventDefault();  \n        fetch(`${BASE_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                user: {\n                    \"username\": event.target[0].value,\n                    \"password\": event.target[1].value\n                }\n            })\n        })\n        .then(response => response.json())\n        .then(result => {\n            console.log(result);\n            localStorage.setItem(\"token\", result.data.token)\n            setLoginSuccess(true)\n        })\n        .catch(console.error);\n    } \n\n    \n   \n\n    if (loginSuccess===true){\n        return <Redirect to=\"/profile\"/>\n\n    } return (\n        <section className=\"login\"> \n            <h1>Login</h1>\n            <form onSubmit={authenticate}\n            >\n                <div>\n                    <label>Username: </label>\n                    <input type=\"text\"/>\n                </div>\n                <div>\n                    <label>Password: </label>\n                    <input type=\"text\"/>\n                </div>\n                <button type=\"submit\">Login</button>\n                <Link className=\"CreateProfile\" to=\"/createProfile\">Don't have an account? Sign Up!</Link>\n            </form>\n            </section>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { BASE_URL } from '../api';\n\nconst SendMessage = (props) => {\n  const [inputMess, setInputMess] = useState('');\n  const {token, postID} = props;\n// console.log(postID);\n// console.log(token);\n    const  SendMessages = async (event) => {\n\n      event.preventDefault();      \n      try {\n      const response = await fetch(`${BASE_URL}/posts/${postID}/messages`, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          message: {\n              content: inputMess\n          }\n        })\n      })\n      const data = await response.json();\n      setInputMess('');\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n        return (\n            <fieldset className=\"SendMessage\"> \n              <form onSubmit={SendMessages}>\n                <label> Message: </label>\n                <input \n                id =\"messages\" \n                type=\"text\" \n                name=\"messages\" \n                value={inputMess}\n                onChange={(event)=>setInputMess(event.target.value)} />\n                <br/>\n\n                <button id=\"SendMessageButton\" type=\"submit\" name=\"event\">Send Message</button>\n              </form>\n            </fieldset>\n        )  \n\n    \n}\n\nexport default SendMessage;","const Delete = ({token, postid}) => {\n    \n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    const handleDelete = (event) => {\n        \n        event.preventDefault()\n        fetch(`${BASE_URL}/posts/${postid}`, {\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        }).then(response => response.json())\n        .then(result => {console.log(result)\n        alert(\"post deleted!\")\n        }).catch(console.error)\n    }\n\n      return (\n          <form onSubmit={handleDelete}>\n            <div className=\"Delete\">\n                <button type=\"submit\">Delete</button>\n            </div> \n          </form>\n      )\n}\nexport default Delete;\n","//THIS IS BONUS BUT WE HAVE NOT BEEN ABLE TO FIGURE THIS OUT JUST YET\n\nconst Edit = (props) => {\n    const {title, setTitle, description, setDescription, price, setPrice, location, setLocation} = props;\n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    const TOKEN = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTIyYzk1YzgzZGUzODAwMTcxMzhjZGMiLCJ1c2VybmFtZSI6IkRhbmllbCIsImlhdCI6MTYyOTY2OTcyNH0.y4yLHm8FxL3fd9JC2FAQEK4cavHQDWn0_ct_Rwv572E\"\n\n  async function editPost() {\n    try {\n      const response = await fetch(`${BASE_URL}/posts/${id}`, {\n          method: \"PATCH\",\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            post: {\n              title: title,\n              description: description,\n              price: price,\n              location: location,\n              willDeliver: true\n            }\n          })\n        })\n        const data = response.json()\n        console.log(data);\n        if (localStorage.getItem(\"token\")) {\n          const newPosts = posts.map(post => {\n            \n          })\n        }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n          return (<div className=\"EditPost\"> \n                  <h1>Edit Post</h1>\n                  <form onSubmit={editPost}>\n                    <label> Title: </label>\n                    <input \n                    type=\"text\" \n                    name=\"title\" \n                    value={title} \n                    placeholder={title} \n                    onChange={(event)=>setTitle(event.target.value)}/>\n\n                    <label> Description: </label>\n                    <input \n                    type=\"text\" \n                    name=\"description\" \n                    value={description} \n                    placeholder={description} \n                    onChange={(event)=>setDescription(event.target.value)}/>\n\n                    <label> Price: </label>\n                    <input \n                    type=\"text\" \n                    name=\"price\" \n                    value={price} \n                    placeholder={price} \n                    onChange={(event)=>setPrice(event.target.value)}/>\n\n                    <label> Location: </label>\n                    <input \n                    type=\"text\" \n                    name=\"location\" \n                    value={location} \n                    placeholder={location} \n                    onChange={(event)=>setLocation(event.target.value)}/>\n\n                    <button id=\"EditPostButton\" type=\"submit\" name=\"event\">Edit Post</button>\n                  </form>\n                </div>\n          )  \n  }\n\nexport default Edit;","import React, { useState } from 'react';\nimport { Link }from 'react-router-dom';\nimport SendMessage from './SendMessage';\nimport Delete from './Delete';\nimport Edit from './Edit';\n\nconst Posts = ({loginSuccess, username, posts, setPosts, messages, setMessages, token}) => {\n  \n    const [filter, setFilter] = useState('')\n   \n   \n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    \n\n       fetch (`${BASE_URL}/posts`)\n          .then(response=> response.json())\n          .then(data => {\n\n            setPosts(data.data.posts)})\n            \n    const filterPost = (post, text) => {\n      if (post.title.toLowerCase().includes(text.toLowerCase())){\n        return true\n      }\n    }\n\n    const filteredPosts = posts.filter (post => filterPost(post, filter))\n    const postToDisplay = filter.length > 0 ? filteredPosts : posts; \n\n    return  ( <div className=\"Posts\">\n\n          <h1> Posts</h1>\n\n          <h2> \n            <input \n              id=\"filter\"\n              type=\"text\"\n              placeholder=\"search by title...\"\n              value= {filter}\n              onChange={(event) => setFilter(event.target.value)}\n              > \n            </input> \n            <button type=\"click\" onClick={filterPost}>Filter Posts</button>\n          </h2>\n\n          \n          {loginSuccess ? <h3><Link to=\"/addpost\"> <button> Add Posts</button></Link></h3> : null}\n\n            {\n              posts &&  \n              postToDisplay.map((post) => <div key={post._id} >\n                \n                <section className=\"AllPosts\">\n                    <h1> Title: {post.title} </h1>\n                    <h2> Description: {post.description}</h2>\n                    <h3> Price: {post.price}</h3>\n                    <h4> User: {post.author.username}</h4>\n                    <h5> Location: {post.location}</h5>\n                    <h6> Deliver: {post.willDeliver ? \"Yes\" : \"No\"}</h6>\n\n                    {loginSuccess ? <SendMessage postID={post._id} messages={messages} setMessages={setMessages} token={token}/>: null} \n                    {loginSuccess && post.author.username === username ? <Delete postid={post._id} token={token}/> : null}  \n                    {loginSuccess && post.author.username === username ? <Edit/> : null}  \n                            \n                </section>\n                \n              </div>)\n\n            }\n   \n    </div>\n    )\n  \n}\n\n\nexport default Posts;","import React, { useState, useEffect } from 'react';\nconst Profile = ({setUsername, username, token}) => {\n    const [messagesFromUser, setMessagesFromUser] = useState([])\n    const [messagesToUser, setMessagesToUser] = useState([])\n    \n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    \n    useEffect ( () => { \n        fetch (`${BASE_URL}/users/me`, {\n            headers:{\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": `Bearer ${token}`\n                }\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n                setMessagesToUser(data.data.messages)\n                setMessagesFromUser(data.data.messages)\n                setUsername(data.data.username)\n\n            })\n            .catch(console.error);\n    },[])\n            \n    return (\n        <div className=\"Profile\">   \n\n            <section className=\"WelcomeUser\"> \n                <h1>Welcome {username} !</h1>\n            </section>\n\n            <section className=\"MessageToMe\"> \n                <h1>Message to You: </h1>  \n                {\n                    messagesToUser.map((message) => \n                        <ul key={message._id} className=\"MessagesToUser\">  \n                            \n                            {message.fromUser.username !== username ? <li> \"{message.content}\"  -from:{message.fromUser.username}</li> : <h2></h2>}\n                              \n                        </ul>  \n                    ) \n                }\n            </section>\n\n            <section className=\"MessageFromMe\">\n                <h1>Message from You: </h1>\n                {\n                     messagesFromUser.map((message) => \n                        <ul key={message._id} className=\"MessagesFromUser\">  \n                             \n                            {message.fromUser.username === username ? <li> \"{message.content}\" sent to post:{message.post.title} </li> : <h2></h2>}\n                            \n                        </ul>\n                    )\n                }\n            </section>\n\n        </div>\n    )\n}\n \n\nexport default Profile;","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router,\nRoute,\nSwitch,\n} from 'react-router-dom';\n\n\nimport {\nAddPost,\nCreateProfile,\nHeader,\nLogin,\nPosts,\nProfile\n} from './components';\n\n\nconst App =()=> {\n    const BASE_URL ='https://strangers-things.herokuapp.com/api/2105-vpi-web-pt'\n    const [posts, setPosts] = useState([])\n    const [loginSuccess, setLoginSuccess] = useState(false);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [ConfirmPassword, setConfirmPassword] = useState(false);\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState('');\n    const [location, setLocation] = useState('');\n    const [willDeliver, setWillDeliver] = useState(false);\n    const [description, setDescription] = useState('');\n    const [token, setToken] = useState('');\n    const [messagesFromUser, setMessagesFromUser] = useState([]);\n    const [messagesToUser, setMessagesToUser] = useState([]);\n    \n\n    useEffect (() => {\n        if (localStorage.getItem(\"token\") ) {\n            setToken(localStorage.getItem(\"token\"))\n            setLoginSuccess(true)\n        }\n    }, [loginSuccess])\n\n\n    return <div className=\"app\"> \n        <Router>\n            <div>\n                <Header \n                    loginSuccess={loginSuccess}\n                    setLoginSuccess={setLoginSuccess}/>\n\n                <Switch>\n                    <Route exact path=\"/posts\">\n\n                        <Posts \n                            posts={posts}\n                            setPosts={setPosts}\n                            loginSuccess={loginSuccess}\n                            title={title}\n                            setTitle={setTitle}\n                            username={username}\n                            token={token}\n                            \n                            />\n                        \n                    </Route>\n\n\n                    <Route path=\"/addPost\">\n\n                        <AddPost\n                         title={title}\n                         setTitle={setTitle}\n                         price={price} \n                         setPrice={setPrice} \n                         location={location}\n                         setLocation={setLocation}\n                         willDeliver={willDeliver}\n                         setWillDeliver={setWillDeliver}\n                         description={description}\n                         setDescription={setDescription}\n                         token={token}\n                         loginSuccess={loginSuccess}\n                         setLoginSuccess={setLoginSuccess}\n                        />\n                        \n                    </Route>\n                   \n                    <Route path=\"/login\">\n\n                        <Login \n                            loginSuccess={loginSuccess}\n                            setLoginSuccess={setLoginSuccess}\n                            setUsername={setUsername}/>\n                        \n                    </Route>\n\n                    <Route path=\"/createProfile\"> \n                        <CreateProfile \n                            username={username}\n                            password={password}\n                            ConfirmPassword={ConfirmPassword}\n                            setUsername={setUsername}\n                            setPassword={setPassword}\n                            setConfirmPassword={setConfirmPassword}/>  \n                    </Route>\n\n\n                    <Route path=\"/profile\">\n                        <Profile \n                         messagesFromUser={messagesFromUser}\n                         setMessagesFromUser={setMessagesFromUser}\n                         messagesToUser={messagesToUser}\n                         setMessagesToUser={setMessagesToUser}\n                         username={username}\n                         setUsername={setUsername}\n                         token={token}/>\n                    </Route>\n\n\n                   <Route path=\"/\">\n                        <Login\n                        loginSuccess={loginSuccess}\n                        setLoginSuccess={setLoginSuccess}/>\n                   </Route>\n\n\n                    <Route path=\"*\">\n                        <h1>404 Error - Page Not Found!</h1>\n                    </Route>\n\n                </Switch>\n            </div>\n        </Router>\n     </div>\n}\n\nReactDOM.render(<App/>, document.getElementById('app'));\n\n"],"sourceRoot":""}